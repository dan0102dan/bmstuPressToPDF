import { Scenes, Markup } from 'telegraf'
import { sendBook } from '../../../../functions'

interface WizardSession extends Scenes.WizardSessionData {
	mesWithCancel: any
}

export default new Scenes.WizardScene<Scenes.WizardContext<WizardSession>>(
	'getbook',
	async (ctx) => {
		ctx.scene.session.mesWithCancel = await ctx.reply(
			'–ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–Ω–∏–≥—É ‚úèÔ∏è',
			Markup.inlineKeyboard([Markup.button.callback('–û—Ç–º–µ–Ω–∞ ‚ùå', 'cancel')])
		)

		return ctx.wizard.next()
	},
	async (ctx) => {
		if ('reply_markup' in ctx.scene.session.mesWithCancel)
			ctx.scene.session.mesWithCancel = await ctx.telegram.editMessageReplyMarkup(
				ctx.chat.id, ctx.scene.session.mesWithCancel.message_id, '',
				Markup.inlineKeyboard([]).reply_markup
			)

		const bookId = Number('text' in ctx.message && ctx.message.text.replace(/[^0-9]/g, ''))
		if (!bookId) {
			ctx.scene.session.mesWithCancel = await ctx.reply(
				'–ù–µ –º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å, —á—Ç–æ –Ω–∞–ø–∏—Å–∞–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑! üëÄ',
				Markup.inlineKeyboard([Markup.button.callback('–û—Ç–º–µ–Ω–∞ ‚ùå', 'cancel')])
			)
			return
		}

		sendBook(ctx.chat.id, bookId)

		return ctx.scene.leave()
	}
)